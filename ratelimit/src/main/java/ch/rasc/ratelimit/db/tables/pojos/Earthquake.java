/*
 * This file is generated by jOOQ.
 */
package ch.rasc.ratelimit.db.tables.pojos;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Earthquake implements Serializable {

  private static final long serialVersionUID = 1L;

  private Long id;
  private LocalDateTime time;
  private BigDecimal latitude;
  private BigDecimal longitude;
  private BigDecimal depth;
  private BigDecimal mag;
  private String place;
  private String earthquakeId;

  public Earthquake() {
  }

  public Earthquake(Earthquake value) {
    this.id = value.id;
    this.time = value.time;
    this.latitude = value.latitude;
    this.longitude = value.longitude;
    this.depth = value.depth;
    this.mag = value.mag;
    this.place = value.place;
    this.earthquakeId = value.earthquakeId;
  }

  public Earthquake(Long id, LocalDateTime time, BigDecimal latitude,
      BigDecimal longitude, BigDecimal depth, BigDecimal mag, String place,
      String earthquakeId) {
    this.id = id;
    this.time = time;
    this.latitude = latitude;
    this.longitude = longitude;
    this.depth = depth;
    this.mag = mag;
    this.place = place;
    this.earthquakeId = earthquakeId;
  }

  /**
   * Getter for <code>EARTHQUAKE.ID</code>.
   */
  public Long getId() {
    return this.id;
  }

  /**
   * Setter for <code>EARTHQUAKE.ID</code>.
   */
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Getter for <code>EARTHQUAKE.TIME</code>.
   */
  public LocalDateTime getTime() {
    return this.time;
  }

  /**
   * Setter for <code>EARTHQUAKE.TIME</code>.
   */
  public void setTime(LocalDateTime time) {
    this.time = time;
  }

  /**
   * Getter for <code>EARTHQUAKE.LATITUDE</code>.
   */
  public BigDecimal getLatitude() {
    return this.latitude;
  }

  /**
   * Setter for <code>EARTHQUAKE.LATITUDE</code>.
   */
  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }

  /**
   * Getter for <code>EARTHQUAKE.LONGITUDE</code>.
   */
  public BigDecimal getLongitude() {
    return this.longitude;
  }

  /**
   * Setter for <code>EARTHQUAKE.LONGITUDE</code>.
   */
  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }

  /**
   * Getter for <code>EARTHQUAKE.DEPTH</code>.
   */
  public BigDecimal getDepth() {
    return this.depth;
  }

  /**
   * Setter for <code>EARTHQUAKE.DEPTH</code>.
   */
  public void setDepth(BigDecimal depth) {
    this.depth = depth;
  }

  /**
   * Getter for <code>EARTHQUAKE.MAG</code>.
   */
  public BigDecimal getMag() {
    return this.mag;
  }

  /**
   * Setter for <code>EARTHQUAKE.MAG</code>.
   */
  public void setMag(BigDecimal mag) {
    this.mag = mag;
  }

  /**
   * Getter for <code>EARTHQUAKE.PLACE</code>.
   */
  public String getPlace() {
    return this.place;
  }

  /**
   * Setter for <code>EARTHQUAKE.PLACE</code>.
   */
  public void setPlace(String place) {
    this.place = place;
  }

  /**
   * Getter for <code>EARTHQUAKE.EARTHQUAKE_ID</code>.
   */
  public String getEarthquakeId() {
    return this.earthquakeId;
  }

  /**
   * Setter for <code>EARTHQUAKE.EARTHQUAKE_ID</code>.
   */
  public void setEarthquakeId(String earthquakeId) {
    this.earthquakeId = earthquakeId;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    final Earthquake other = (Earthquake) obj;
    if (this.id == null) {
      if (other.id != null)
        return false;
    }
    else if (!this.id.equals(other.id))
      return false;
    if (this.time == null) {
      if (other.time != null)
        return false;
    }
    else if (!this.time.equals(other.time))
      return false;
    if (this.latitude == null) {
      if (other.latitude != null)
        return false;
    }
    else if (!this.latitude.equals(other.latitude))
      return false;
    if (this.longitude == null) {
      if (other.longitude != null)
        return false;
    }
    else if (!this.longitude.equals(other.longitude))
      return false;
    if (this.depth == null) {
      if (other.depth != null)
        return false;
    }
    else if (!this.depth.equals(other.depth))
      return false;
    if (this.mag == null) {
      if (other.mag != null)
        return false;
    }
    else if (!this.mag.equals(other.mag))
      return false;
    if (this.place == null) {
      if (other.place != null)
        return false;
    }
    else if (!this.place.equals(other.place))
      return false;
    if (this.earthquakeId == null) {
      if (other.earthquakeId != null)
        return false;
    }
    else if (!this.earthquakeId.equals(other.earthquakeId))
      return false;
    return true;
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
    result = prime * result + ((this.time == null) ? 0 : this.time.hashCode());
    result = prime * result + ((this.latitude == null) ? 0 : this.latitude.hashCode());
    result = prime * result + ((this.longitude == null) ? 0 : this.longitude.hashCode());
    result = prime * result + ((this.depth == null) ? 0 : this.depth.hashCode());
    result = prime * result + ((this.mag == null) ? 0 : this.mag.hashCode());
    result = prime * result + ((this.place == null) ? 0 : this.place.hashCode());
    result = prime * result
        + ((this.earthquakeId == null) ? 0 : this.earthquakeId.hashCode());
    return result;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Earthquake (");

    sb.append(id);
    sb.append(", ").append(time);
    sb.append(", ").append(latitude);
    sb.append(", ").append(longitude);
    sb.append(", ").append(depth);
    sb.append(", ").append(mag);
    sb.append(", ").append(place);
    sb.append(", ").append(earthquakeId);

    sb.append(")");
    return sb.toString();
  }
}
